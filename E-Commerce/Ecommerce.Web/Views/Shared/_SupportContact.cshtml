@using System.Security.Claims
@using Ecommerce.Domain.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager

<heead>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" href="@Url.Content("~/client-assets/css/Support.css")" asp-append-version="true" />
</heead>


<!-- Added: Chat trigger button -->

<!-- Added: Modal wrapper -->
<div class="modal fade" id="chatModal" tabindex="-1" aria-labelledby="chatModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="container-fluid h-100">
        <div class="row h-100 profile">
            <div class="col-12 chat-section p-0">
            <!-- Updated: Added close button to header -->
            <div class="chat-header p-3 border-bottom">
              <div class="d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center">
                  <img src="" class="photo rounded-circle message-avatar" alt=""/>
                  <div class="ms-3">
                    <h5 class="mb-0">Support Agent</h5>
                    <small class="text-muted">Online</small>
                  </div>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
            </div>

            <div class="chat-messages p-3">
              <div class="photo message-group received">
                <div class="message">
                  <img src="" class="photo rounded-circle message-avatar" alt=""/>
                  <div class="message-content">
                    <p>Hello! How can I help you today?</p>
                    <small class="message-time"></small>
                  </div>
                </div>
              </div>
            </div>

            <div class="chat-input p-4 border-top">
              <div id="messageForm" class="d-flex align-items-center">
                <div class="input-group curved-input">
                  <input type="file" class="d-none" id="imageUpload" accept="image/*">
                  <button type="button" class="btn btn-outline-secondary rounded-start-pill" onclick="document.getElementById('imageUpload').click()">
                    <i class="fas fa-paperclip"></i>
                  </button>
                  <input type="text" id="message" class=" form-control" placeholder="Type your message..." aria-label="Message">
                  <button type="submit" id="sendButton" class="btn btn-primary rounded-end-pill">
                    <i class="fas fa-paper-plane"></i>
                  </button>
                </div>
              </div>
            </div>
         </div>
        </div>
      </div>
    </div>
  </div>
</div>


<script>
  
  
  //Para enviar los mensajes de usuario a soporte
document.addEventListener("DOMContentLoaded", function () {
    const chatModal = document.getElementById("chatModal");

    if (chatModal) {
        chatModal.addEventListener("shown.bs.modal", () => {
           
            const sendButton = document.querySelector("#sendButton");
            const messageInput = document.querySelector("#message");

            if (!sendButton || !messageInput) {
                console.error("Botón o campo de mensaje no encontrado.");
                return;
            }

            sendButton.addEventListener("click", async () => {
              const messageText = messageInput.value.trim();
              if (messageText === "") return;

              if (typeof adminList === "undefined" || typeof userId === "undefined" || typeof connection === "undefined") {

                console.log(`El adminList ${adminList}`)
                console.log(`El userId ${userId}`)
                console.error("Variables necesarias no están definidas (adminList, userId o connection).");
                return;
              }

              connection.invoke("SendToSupport",userId, adminList[0], messageText)
                .catch(err => console.error(err.toString()));
                
              const response = await fetch(`/users/img/${userId}`);
              const data = await response.json();
              console.log(data.url)
          
              const chatDiv = document.querySelector(".message-group");
              const messageHTML = `
                    <div class="message sent">
                        <img src=${data.url} class="rounded-circle message-avatar" alt="Client">
                        <div class="message-content">
                            <p>${messageText}</p>
                            <small class="message-time">${new Date().toLocaleTimeString()}</small>
                        </div>
                    </div>`;

              chatDiv.insertAdjacentHTML('beforeend', messageHTML);
              messageInput.value = "";
            });
        });
    }
});

</script>



